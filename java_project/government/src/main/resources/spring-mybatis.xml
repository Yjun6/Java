<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd 
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd 
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

	<!--导入外部属性文件-->
	<context:property-placeholder
			location="classpath:ssm.properties"/>

	<!--配置数据源(数据库的相关信息)-->
	<!--数据源的类型：
		1 c3p0 ComboPooledDataSource
		2 dbcp
		3 阿里云
	-->
	<bean id="c3p0" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<!--driverClass-驱动-->
		<property name="driverClass" value="${jdbc_driver}"/>
		<!--jdbcUrl-url-->
		<property name="jdbcUrl" value="${jdbc_url}"/>
		<!--user-用户名-->
		<property name="user" value="${jdbc_user}"/>
		<!--password-密码-->
		<property name="password" value="${jdbc_password}"/>
	</bean>

	<!--##########spring整合mybatis,开始##################-->
	<!--1 将mybatis的SqlSessionFactory对象交给spring来创建-->
	<!--SqlSessionFactoryBean是spring提供的类，
	用来为mybatis创建数据库对象SqlSessionFactory-->
	<bean class="org.mybatis.spring.SqlSessionFactoryBean">
		<!--1-1 注入数据库相关信息（数据源）-->
		<property name="dataSource" ref="c3p0"/>
		<!--1-2 指定mybaits核心配置文件的路径(方式一)-->
		<!--configLocation指定mybatis核心配置文件的路径-->
		<!--<property name="configLocation"
				  value="classpath:mybatis-config.xml"/>-->
		<!--1-2 指定mybaits映射文件的路径(方式二),不需要mybatis的核心配置文件了，推荐-->
		<property name="mapperLocations"
				  value="classpath:mappers/*.xml"/>
	</bean>

	<!--2 将mybatis的映射接口的代理对象交给spring来创建-->
	<!--MapperScannerConfigurer用来扫描指定的包，
		为包中的所有接口生成动态代理-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!--注入要扫描的包-映射接口包-->
		<property name="basePackage" value="cn.newdream.mapper"/>
	</bean>
	<!--##########spring整合mybatis,结束##################-->
</beans>